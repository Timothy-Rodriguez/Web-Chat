{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\mini\\\\chat\\\\client\\\\src\\\\contexts\\\\ConversationsProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext } from 'react'; //import Contacts from '../components/Contacts'\n\nimport useLocalSorage from '../hooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConversationsContext = /*#__PURE__*/React.createContext();\nexport function useConversations() {\n  _s();\n\n  return useContext(ContactsContext);\n}\n\n_s(useConversations, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function ConversationsProvider({\n  children\n}) {\n  _s2();\n\n  const [conversations, setConversations] = useLocalSorage('conversations', []);\n\n  function createConversation(recipients) {\n    setConversations(prevConversations => {\n      return [...prevConversations, {\n        recipients,\n        messages: []\n      }];\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(ConversationsContext.Provider, {\n    value: {\n      conversations,\n      createConversation\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ConversationsProvider, \"Wj5y4s+E7nVPu64jLl+nud+whgo=\", false, function () {\n  return [useLocalSorage];\n});\n\n_c = ConversationsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConversationsProvider\");","map":{"version":3,"sources":["C:/Users/User/Desktop/mini/chat/client/src/contexts/ConversationsProvider.js"],"names":["React","useContext","useLocalSorage","ConversationsContext","createContext","useConversations","ContactsContext","ConversationsProvider","children","conversations","setConversations","createConversation","recipients","prevConversations","messages"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC,C,CACA;;AACA,OAAOC,cAAP,MAA2B,0BAA3B;;AAEA,MAAMC,oBAAoB,gBAAGH,KAAK,CAACI,aAAN,EAA7B;AAEA,OAAO,SAASC,gBAAT,GAA4B;AAAA;;AAC/B,SAAOJ,UAAU,CAACK,eAAD,CAAjB;AACH;;GAFeD,gB;;AAIhB,OAAO,SAASE,qBAAT,CAA+B;AAAEC,EAAAA;AAAF,CAA/B,EAA6C;AAAA;;AAChD,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,cAAc,CAAC,eAAD,EAAkB,EAAlB,CAAxD;;AAEA,WAASS,kBAAT,CAA4BC,UAA5B,EAAwC;AACpCF,IAAAA,gBAAgB,CAACG,iBAAiB,IAAI;AAClC,aAAO,CAAC,GAAGA,iBAAJ,EAAuB;AAAED,QAAAA,UAAF;AAAcE,QAAAA,QAAQ,EAAE;AAAxB,OAAvB,CAAP;AACH,KAFe,CAAhB;AAGH;;AAED,sBACI,QAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAE;AAAEL,MAAAA,aAAF;AAAiBE,MAAAA;AAAjB,KAAtC;AAAA,cACKH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;IAdeD,qB;UAC8BL,c;;;KAD9BK,qB","sourcesContent":["import React, { useContext } from 'react'\r\n//import Contacts from '../components/Contacts'\r\nimport useLocalSorage from '../hooks/useLocalStorage'\r\n\r\nconst ConversationsContext = React.createContext()\r\n\r\nexport function useConversations() {\r\n    return useContext(ContactsContext)\r\n}\r\n\r\nexport function ConversationsProvider({ children }) {\r\n    const [conversations, setConversations] = useLocalSorage('conversations', [])\r\n\r\n    function createConversation(recipients) {\r\n        setConversations(prevConversations => {\r\n            return [...prevConversations, { recipients, messages: [] }]\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ConversationsContext.Provider value={{ conversations, createConversation }}>\r\n            {children}\r\n        </ConversationsContext.Provider>\r\n    )\r\n}\r\n "]},"metadata":{},"sourceType":"module"}