{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\mini\\\\chat\\\\client\\\\src\\\\components\\\\OpenConversation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Form, InputGroup, Button } from 'react-bootstrap';\nimport { useConversations } from '../contexts/ConversationsProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OpenConversation() {\n  _s();\n\n  const [text, setText] = useState('');\n  const lastMessageRef = useRef();\n  const {\n    sendMessage,\n    selectedConversation\n  } = useConversations();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    sendMessage(selectedConversation.recipients.map(r => r.id), text);\n    setText('');\n  }\n\n  useEffect(() => {\n    if (lastMessageRef.current) {\n      lastMessageRef.current.scrollInView({\n        smooth: true\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column flex-grow-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 overflow-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column align-items-start justify-content-end px-3\",\n        children: selectedConversation.messages.map((message, index) => {\n          const lastMessage = selectedConversation.messages.length - 1 === index;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `my-1 d-flex flex-column ${message.fromMe ? 'align-self-end' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `rounded px-2 py-1 ${message.fromMe ? 'bg-primary text-white' : 'border'}`,\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `text-muted small ${message.fromMe ? 'text-right' : ''}`,\n              children: message.fromMe ? 'You' : message.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"p-2 border-top\",\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            required: true,\n            value: text,\n            onChange: e => setText(e.target.value),\n            style: {\n              height: '75px',\n              resize: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"m-1\",\n              type: \"submit\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OpenConversation, \"yZ3vRR0gfOcX5yFTMV85qW7j2s8=\", false, function () {\n  return [useConversations];\n});\n\n_c = OpenConversation;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpenConversation\");","map":{"version":3,"sources":["C:/Users/User/Desktop/mini/chat/client/src/components/OpenConversation.js"],"names":["React","useState","useRef","useEffect","Form","InputGroup","Button","useConversations","OpenConversation","text","setText","lastMessageRef","sendMessage","selectedConversation","handleSubmit","e","preventDefault","recipients","map","r","id","current","scrollInView","smooth","messages","message","index","lastMessage","length","fromMe","senderName","target","value","height","resize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,MAA3B,QAAyC,iBAAzC;AACA,SAASC,gBAAT,QAAiC,mCAAjC;;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMU,cAAc,GAAGT,MAAM,EAA7B;AACA,QAAM;AAAEU,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAwCN,gBAAgB,EAA9D;;AAEA,WAASO,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AAEAJ,IAAAA,WAAW,CACPC,oBAAoB,CAACI,UAArB,CAAgCC,GAAhC,CAAoCC,CAAC,IAAIA,CAAC,CAACC,EAA3C,CADO,EACwCX,IADxC,CAAX;AAGAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH;;AACDP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,cAAc,CAACU,OAAnB,EAA4B;AACxBV,MAAAA,cAAc,CAACU,OAAf,CAAuBC,YAAvB,CAAoC;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAApC;AACH;AACJ,GAJQ,CAAT;AAKA,sBAEI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,+DAAf;AAAA,kBACKV,oBAAoB,CAACW,QAArB,CAA8BN,GAA9B,CAAkC,CAACO,OAAD,EAAUC,KAAV,KACnC;AACI,gBAAMC,WAAW,GAAGd,oBAAoB,CAACW,QAArB,CAA8BI,MAA9B,GAAuC,CAAvC,KAA6CF,KAAjE;AAEA,8BACI;AAAiB,YAAA,SAAS,EAAG,2BAA0BD,OAAO,CAACI,MAAR,GAAiB,gBAAjB,GAAoC,EAAG,EAA9F;AAAA,oCACI;AAAK,cAAA,SAAS,EAAG,qBAAoBJ,OAAO,CAACI,MAAR,GAAiB,uBAAjB,GAA2C,QAAU,EAA1F;AAAA,wBAA8FJ,OAAO,CAAChB;AAAtG;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,SAAS,EAAG,oBAAmBgB,OAAO,CAACI,MAAR,GAAiB,YAAjB,GAAgC,EAAG,EAAvE;AAAA,wBAA2EJ,OAAO,CAACI,MAAR,GAAiB,KAAjB,GAAyBJ,OAAO,CAACK;AAA5G;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,aAAUJ,KAAV;AAAA;AAAA;AAAA;AAAA,kBADJ;AAUH,SAdA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAwBI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEZ,YAAhB;AAAA,6BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,gBAAtB;AAAA,+BACI,QAAC,UAAD;AAAA,kCACA,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,EAAE,EAAC,UAAjB;AAA4B,YAAA,QAAQ,MAApC;AAAqC,YAAA,KAAK,EAAEL,IAA5C;AAAkD,YAAA,QAAQ,EAAEM,CAAC,IAAIL,OAAO,CAACK,CAAC,CAACgB,MAAF,CAASC,KAAV,CAAxE;AAA0F,YAAA,KAAK,EAAE;AAAEC,cAAAA,MAAM,EAAE,MAAV;AAAmBC,cAAAA,MAAM,EAAE;AAA3B;AAAjG;AAAA;AAAA;AAAA;AAAA,kBADA,eAIA,QAAC,UAAD,CAAY,MAAZ;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,KAAlB;AAAwB,cAAA,IAAI,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAwCH;;GA1DuB1B,gB;UAG0BD,gB;;;KAH1BC,gB","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport { Form, InputGroup, Button } from 'react-bootstrap'\r\nimport { useConversations } from '../contexts/ConversationsProvider'\r\n\r\nexport default function OpenConversation() {\r\n    const [text, setText] = useState('') \r\n    const lastMessageRef = useRef()\r\n    const { sendMessage, selectedConversation } = useConversations()\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        sendMessage(\r\n            selectedConversation.recipients.map(r => r.id),text\r\n        )\r\n        setText('')\r\n    }\r\n    useEffect(() => {\r\n        if (lastMessageRef.current) {\r\n            lastMessageRef.current.scrollInView({ smooth: true })\r\n        }\r\n    })\r\n    return (\r\n        \r\n        <div className='d-flex flex-column flex-grow-1'>\r\n            <div className='flex-grow-1 overflow-auto'>\r\n                <div className='d-flex flex-column align-items-start justify-content-end px-3'>\r\n                    {selectedConversation.messages.map((message, index) => \r\n                    {\r\n                        const lastMessage = selectedConversation.messages.length - 1 === index\r\n \r\n                        return(\r\n                            <div key={index} className={`my-1 d-flex flex-column ${message.fromMe ? 'align-self-end' : ''}`}>\r\n                                <div className={`rounded px-2 py-1 ${message.fromMe ? 'bg-primary text-white' : 'border' }`}>{message.text}</div>\r\n                                <div className={`text-muted small ${message.fromMe ? 'text-right' : ''}`}>{message.fromMe ? 'You' : message.senderName}</div>\r\n                                \r\n                            </div>\r\n                        )\r\n                            \r\n\r\n                        \r\n                    })\r\n                }\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group className='p-2 border-top'>\r\n                    <InputGroup>\r\n                    <Form.Control as='textarea' required value={text} onChange={e => setText(e.target.value)} style={{ height: '75px' , resize: 'none' }}>\r\n\r\n                    </Form.Control>\r\n                    <InputGroup.Append>\r\n                        <Button className='m-1' type='submit'>Send</Button>\r\n                    </InputGroup.Append>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}