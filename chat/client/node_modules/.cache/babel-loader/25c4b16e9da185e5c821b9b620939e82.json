{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\mini\\\\chat\\\\chat\\\\client\\\\src\\\\contexts\\\\ContactsProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext } from 'react'; //import Contacts from '../components/Contacts'\n\nimport useLocalSorage from '../hooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactsContext = /*#__PURE__*/React.createContext();\nexport function useContacts() {\n  _s();\n\n  return useContext(ContactsContext);\n}\n\n_s(useContacts, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function ContactsProvider({\n  children\n}) {\n  _s2();\n\n  const [contacts, setContacts] = useLocalSorage('contacts', []);\n\n  function createContact(id, name) {\n    setContacts(prevContacts => {\n      return [...prevContacts, {\n        id,\n        name\n      }];\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(ContactsContext.Provider, {\n    value: {\n      contacts,\n      createContact\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ContactsProvider, \"k7bk7x8UaxESErJ5Xkfdpsblw+0=\", false, function () {\n  return [useLocalSorage];\n});\n\n_c = ContactsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsProvider\");","map":{"version":3,"sources":["C:/Users/User/Desktop/mini/chat/chat/client/src/contexts/ContactsProvider.js"],"names":["React","useContext","useLocalSorage","ContactsContext","createContext","useContacts","ContactsProvider","children","contacts","setContacts","createContact","id","name","prevContacts"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC,C,CACA;;AACA,OAAOC,cAAP,MAA2B,0BAA3B;;AAEA,MAAMC,eAAe,gBAAGH,KAAK,CAACI,aAAN,EAAxB;AAEA,OAAO,SAASC,WAAT,GAAuB;AAAA;;AAC1B,SAAOJ,UAAU,CAACE,eAAD,CAAjB;AACH;;GAFeE,W;;AAIhB,OAAO,SAASC,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAwC;AAAA;;AAC3C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,cAAc,CAAC,UAAD,EAAa,EAAb,CAA9C;;AAEA,WAASQ,aAAT,CAAuBC,EAAvB,EAA2BC,IAA3B,EAAiC;AAC7BH,IAAAA,WAAW,CAACI,YAAY,IAAI;AACxB,aAAO,CAAC,GAAGA,YAAJ,EAAkB;AAAEF,QAAAA,EAAF;AAAMC,QAAAA;AAAN,OAAlB,CAAP;AACH,KAFU,CAAX;AAGH;;AAED,sBACI,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEJ,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,KAAjC;AAAA,cACKH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;IAdeD,gB;UACoBJ,c;;;KADpBI,gB","sourcesContent":["import React, { useContext } from 'react'\r\n//import Contacts from '../components/Contacts'\r\nimport useLocalSorage from '../hooks/useLocalStorage'\r\n\r\nconst ContactsContext = React.createContext()\r\n\r\nexport function useContacts() {\r\n    return useContext(ContactsContext)\r\n}\r\n\r\nexport function ContactsProvider({ children }) {\r\n    const [contacts, setContacts] = useLocalSorage('contacts', [])\r\n\r\n    function createContact(id, name) {\r\n        setContacts(prevContacts => {\r\n            return [...prevContacts, { id, name }]\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ContactsContext.Provider value={{ contacts, createContact }}>\r\n            {children}\r\n        </ContactsContext.Provider>\r\n    )\r\n}\r\n "]},"metadata":{},"sourceType":"module"}